{"version":3,"sources":["components/table/Table.js","components/card/Card.js","components/timer/Timer.js","components/result/Result.js","components/level/Level.js","components/container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","className","this","children","React","Component","Card","state","status","checked","time","setState","answer","changeParentFlag","console","log","level","index","src","alt","setTimeout","Timer","ind","flag","setInterval","clearInterval","Result","num","visibility","Level","name","Container","App","getState","resultRef","createRef","assistant","getStateForAssistant","createAssistant","on","event","action","dispatchAssistantAction","cards","changeFlag","value","startGame","random","from","till","Math","floor","countOfAnswers","answersIndexes","Set","used","i","has","add","isAnswer","push","bind","ref","finishGame","current","makeResult","restartGame","type","call","check","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c4abee.chunk.js","sourcesContent":["import React from 'react'\nimport './Table.css'\n\nexport class Table extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div className={'table'}>\n            {this.props.children}\n        </div>\n    }\n}","import React, {useContext} from 'react'\nimport './Card.css'\n\nimport {initializeAssistant} from \"../../App\";\n\nexport class Card extends React.Component {\n    img;\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: \"open\",\n            checked: \"\",\n            time: true,\n        };\n    }\n    check() {\n        if (this.state.checked !== \"checked\") {\n            this.setState(this.state = {checked: \"checked\"})\n            if (this.props.answer === \"truth\") {\n                this.props.changeParentFlag(1);\n            } else if (this.props.answer === \"wrong\") {\n                this.props.changeParentFlag(-1);\n            }\n        }\n    }\n    makeResult() {\n        this.setState(this.state = {status: \"open\", time: false, checked: \"checked\"});\n    }\n    render() {\n        console.log(this.state.time);\n        return <div className={'card ' + this.props.level}>\n            <div className={'item ' + this.props.answer + ' ' + this.state.checked}>\n                <div className={\"index \" + this.state.status}>{this.props.index}</div>\n                <img className={\"picture \" + this.state.status} src={this.props.src} alt=\"\"/>\n            </div>\n        </div>\n    }\n    componentDidMount() {\n        if (this.state.time === true) {\n            setTimeout(() => {this.setState(this.state = {status: \"close\"})}, 7000)\n        }\n    }\n}","import React from 'react'\nimport './Timer.css'\n\nexport class Timer extends React.Component {\n    state;\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: 6,\n            status: 'invisible'\n        };\n    }\n    render() {\n        return <div className={'wrap' + \" \" + this.state.status}>\n            <div className={'timer' + \" \" + this.state.status}>{this.state.time}</div>\n        </div>\n    }\n    componentDidMount() {\n        let ind = 6;\n        let flag = setInterval(() => {\n            this.setState(this.state = {time: ind});\n            --ind;\n            if (ind === 2) {\n                this.setState(this.state = {status: \"visible\"});\n            }\n            else if (ind === -1) {\n                this.setState(this.state = {status: \"invisible\"});\n                clearInterval(flag);\n            }\n        }, 1000)\n    }\n}","import React from \"react\";\nimport \"./Result.css\";\n\nexport class Result extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            flag: 0,\n            num: 0,\n            visibility: \"invisible\",\n        }\n    }\n    makeResult(flag, num) {\n        this.setState(this.state = {flag: flag, num: num, visibility: \"visible\"})\n    }\n    render() {\n        return <div className={\"result \" + this.state.visibility}>\n            <div className={\"result_container\"}>\n                <div className={\"text\"}>Ваш результат:</div>\n                <div className={\"data\"}>{this.state.flag + \" из \" + this.state.num}</div>\n            </div>\n        </div>\n    }\n}","import React from \"react\";\nimport \"./Level.css\"\n\nexport class Level extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <button className={\"level\"}>\n            <div>{this.props.name}</div>\n        </button>\n    }\n}","import React from \"react\";\nimport \"./Container.css\"\n\nexport class Container extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div className={\"container\"}>\n            {this.props.children}\n        </div>\n    }\n}","import React, {Fragment, useRef} from 'react'\n\nimport {\n    createSmartappDebugger,\n    createAssistant,\n} from \"@sberdevices/assistant-client\";\n\nimport './App.css'\nimport {Table} from \"./components/table/Table\";\nimport {Card} from \"./components/card/Card\";\nimport {Timer} from \"./components/timer/Timer\";\nimport {Result} from \"./components/result/Result\";\nimport {Level} from \"./components/level/Level\";\nimport {Container} from \"./components/container/Container\";\n\nconst countOfPictures = 25;\n\nconst initializeAssistant = (getState/*: any*/) => {\n    if (process.env.NODE_ENV === \"development\") {\n        return createSmartappDebugger({\n            token: \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZTFmNTQxODM0NzEwNjkyNzAzM2QwYTQ0ODFmMTNkNTJiMTA1N2NhMWNkY2I0OTg0ZGNiMWQxZjQzMzdhMzYyNTM5YmU5MjcwMDQyNjI5OCIsImF1ZCI6IlZQUyIsImV4cCI6MTYyMjgzNDM2OSwiaWF0IjoxNjIyNzQ3OTU5LCJpc3MiOiJLRVlNQVNURVIiLCJ0eXBlIjoiQmVhcmVyIiwianRpIjoiNTU0ZGQ5MDQtNGNmYi00NWMxLTkzYjAtNTgwM2Y3ZDc1ZjRhIiwic2lkIjoiNzlmZGFjZDgtMzA0MS00MTBhLTk5ODYtMTg3YWVmZDQyY2Y2In0.uXUlM0KNcgWTRnsdKZ4M5JMVsxtcZCIai0Nlvuo7GFG1qpL_cLsAC2i8hpupDbSNZWJLn9NTDGKzGYIDs8ra9oyzBOmvu2v-Ak5ysDLkQEmHC1ZxCUP0mQ3KhwLlHJ6KeemSlr7_9XGz_T6MkVhK2A0BT5Exg1XwlPM6ltlhsPDP5-8vGyIt0M_eEcJy1ApNWajXDkDj4YvOiRkOWkyRP00-fC2upLfCdy-zA9GuvANtkpcBLNn1nwlB73c3iAob6OVoRccnilMolUe7iOp6PPikZjNe3AUa-Ti9pCyxzhKii9fAirjSE52vyz9oAP1_SZrDgxpdQMIEFObaO3aK-Ty-4fSGmbfAZ_il36pJfmuuYqcLNCTKhWtEELey46KPk34b2dgKkpAz7abpu8P00_s-z_uva7OPO-_6JEm-kwqL5v_BXOHjVerqL2REHx77xW87NHZlKwmXBS9Oo0XzrKHvLCgoWQePZTM3ecPVrh7YTBr_n5Do62p5wzR7_9ulPQotxg9kbeXXxUlYhch32_fzQU4Qm1lTXeU5lGia9y6uplDUNXJYsE3c4sUUZX9TboFk5sXcTmlEwbKG6hsV22_WFOEUpNz6gXh0liWkGy9UTk5DM3mYegECe0NUy1TpMYWHtexUNsSCeACea0XkCmr2K7P8EM_tsY7lr73t5Jo\" ?? \"\",\n            initPhrase: 'Запусти тренажер памяти',\n            getState,\n        });\n    }\n    return createAssistant({ getState });\n};\n\nexport {initializeAssistant};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.assistant = initializeAssistant(() => this.getStateForAssistant() );\n        this.assistant.on(\"data\", (event/*: any*/) => {\n            console.log(`assistant.on(data)`, event);\n            const { action } = event\n            this.dispatchAssistantAction(action);\n        });\n        this.assistant.on(\"start\", (event) => {\n            console.log(`assistant.on(start)`, event);\n        });\n        this.state = {\n            cards: [],\n            flag: 0,\n            status: 'start',\n            level: 0,\n            changeFlag(value) {\n                this.setState(this.state = {flag: this.state.flag + value})\n            },\n            startGame(level) {\n                function random(from, till) {\n                    return (Math.floor(Math.random() * (till - from)) + from);\n                }\n                function changeFlag(value) {\n                    this.setState(this.state = {flag: this.state.flag + value})\n                }\n                let countOfAnswers = random(4, 7);\n                let answer = random(0, countOfPictures);\n                console.log(answer);\n                console.log(countOfAnswers);\n                let answersIndexes = new Set();\n                let used = new Set([answer]);\n                let cards = [];\n\n                for (let i = 0; i < countOfAnswers; i++) {\n                    while(true) {\n                        let ind = random(0, level);\n                        if (!answersIndexes.has(ind)) {\n                            answersIndexes.add(ind);\n                            break;\n                        }\n                    }\n                }\n                this.setState(this.state = {status: \"current\", flag: level - countOfAnswers, level: level, changeFlag: changeFlag});\n                for (let i = 0; i < level; i++) {\n                    let isAnswer = 'wrong';\n                    let value = 0;\n                    if (countOfAnswers !== 0 && answersIndexes.has(i)) {\n                        {\n                            countOfAnswers--;\n                            isAnswer = 'truth';\n                            value = answer;\n                        }\n                    }\n                    else {\n                        while (true) {\n                            value = random(0, countOfPictures);\n                            if (!used.has(value)) {\n                                used.add(value);\n                                break;\n                            }\n                        }\n                    }\n                    this[\"c\" + i] = React.createRef();\n                    cards.push(<Card src={\"https://pictures-for-memory-game.s3.eu-north-1.amazonaws.com/\" + (value + 1) + \".jpg\"} index={i + 1} status={\"open\"} answer={isAnswer} level={'level_' + level} changeParentFlag={changeFlag.bind(this)} key={i} time={true} ref={this['c' + i]} />)\n\n                }\n                this.setState(this.state = {cards: cards});\n            },\n            finishGame() {\n                for (let i = 0; i < this.state.level; i++) {\n                    this['c' + i].current.makeResult();\n                }\n                this.resultRef.current.makeResult(this.state.flag, this.state.level);\n                this.setState(this.state = {status: \"finish\"});\n            },\n            restartGame() {\n                this.setState(this.state = {status: \"start\"})\n            }\n        }\n    }\n    resultRef = React.createRef();\n    getStateForAssistant () {\n        console.log('getStateForAssistant: this.state:', this.state)\n        const state = {};\n        return state;\n    }\n    dispatchAssistantAction (action) {\n        console.log('dispatchAssistantAction', action);\n        if (action) {\n            switch (action.type) {\n                case \"easy_level\":\n                    if (this.state.status === \"start\") {\n                        this.state.startGame.call(this, 9);\n                    }\n                    return;\n                case \"middle_level\":\n                    if (this.state.status === \"start\") {\n                        this.state.startGame.call(this, 16);\n                    }\n                    return;\n                case \"hard_level\":\n                    if (this.state.status === \"start\") {\n                        this.state.startGame.call(this, 25);\n                    }\n                    return;\n                case \"return_back\":\n                    if (this.state.status === \"finish\") {\n                        this.state.restartGame.call(this);\n                    }\n                    return;\n                case \"check_answers\":\n                    if (this.state.status === \"current\") {\n                        this.state.finishGame.call(this);\n                    }\n                case \"choose_num\":\n                    if(this.state.status === \"current\")\n                    this['c' + (action.num - 1)].current.check();\n                    return;\n            }\n        }\n    }\n    render() {\n        if (this.state.status === \"start\") {\n            return <div className={\"start_page\"}>\n                <Container>\n                    <Level num={1} name={\"легкий уровень\"}/>\n                    <Level num={2} name={\"средний уровень\"}/>\n                    <Level num={3} name={\"сложный уровень\"}/>\n                </Container>\n            </div>\n        } else if (this.state.status === \"current\" || this.state.status === \"finish\") {\n            return <Fragment>\n                <Timer/>\n                <Table>{this.state.cards}</Table>\n                <Result ref={this.resultRef}></Result>\n            </Fragment>\n        }\n    }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}