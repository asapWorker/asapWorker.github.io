{"ast":null,"code":"var _jsxFileName = \"/home/ralina/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/project/memory-app/memory-frontend/src/App.js\";\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport { Table } from \"./components/table/Table\";\nimport { Card } from \"./components/card/Card\";\nimport { Timer } from \"./components/timer/Timer\";\nimport { Result } from \"./components/result/Result\";\nimport { Level } from \"./components/level/Level\";\nimport { Container } from \"./components/container/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: [],\n      cards: [],\n      flag: 0,\n      rights: 0,\n      status: 'start',\n      level: 0,\n\n      random(from, till) {\n        return Math.floor(Math.random() * (till - from)) + from;\n      },\n\n      changeFlag(value) {\n        this.setState(this.state = {\n          flag: this.state.flag + value\n        });\n      },\n\n      startGame(level) {\n        let countOfRight = this.state.random(2, 8);\n        this.setState(this.state = {\n          status: \"current\",\n          flag: level - countOfRight,\n          level: level,\n          rights: countOfRight\n        });\n      },\n\n      finishGame() {\n        this.setState(this.state = {\n          status: \"finish\"\n        });\n      },\n\n      restartGame() {\n        this.setState(this.state = {\n          status: \"start\"\n        });\n      }\n\n    };\n    /*for (let i = 1; i <= this.state.level; i++) {\n        let answer = 'wrong';\n        let src = this.state.right;\n        if (this.state.answers.includes(i)) {\n            answer = 'truth';\n        } else {\n            while (true) {\n                src = (Math.floor(Math.random() * this.state.level) + 1);\n                if (!numbers.includes(src) && (src !== this.state.right)) {\n                    numbers.push(src);\n                    break;\n                }\n            }\n        }\n        arr.push(<Card src={src + \".jpg\"} index={i} status={\"open\"} changeStatus={this.state.changeStatus} answer={answer} level={'level_' + this.state.level} changeParentFlag={this.state.changeFlag.bind(this)} key={i}/>);\n    }*/\n  }\n\n  render() {\n    if (this.state.status === \"start\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Level, {\n          name: \"легко\",\n          action: this.state.startGame.bind(this, 9)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Level, {\n          name: \"средне\",\n          action: this.state.startGame.bind(this, 16)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Level, {\n          name: \"сложно\",\n          action: this.state.startGame.bind(this, 25)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.status === \"current\") {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          style: {\n            position: \"absolute\"\n          },\n          value: \"check\",\n          onClick: this.state.finishGame.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: this.state.cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Result, {\n          flag: this.state.flag,\n          num: this.state.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"return\",\n          onClick: this.state.restartGame.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ralina/Рабочий стол/project/memory-app/memory-frontend/src/App.js"],"names":["React","Fragment","Table","Card","Timer","Result","Level","Container","App","Component","constructor","props","state","src","cards","flag","rights","status","level","random","from","till","Math","floor","changeFlag","value","setState","startGame","countOfRight","finishGame","restartGame","render","bind","position"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport './App.css'\nimport {Table} from \"./components/table/Table\";\nimport {Card} from \"./components/card/Card\";\nimport {Timer} from \"./components/timer/Timer\";\nimport {Result} from \"./components/result/Result\";\nimport {Level} from \"./components/level/Level\";\nimport {Container} from \"./components/container/Container\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: [],\n            cards: [],\n            flag: 0,\n            rights: 0,\n            status: 'start',\n            level: 0,\n            random(from, till) {\n                return (Math.floor(Math.random() * (till - from)) + from);\n            },\n            changeFlag(value) {\n                this.setState(this.state = {flag: this.state.flag + value})\n            },\n            startGame(level) {\n                let countOfRight = this.state.random(2, 8);\n                this.setState(this.state = {status: \"current\", flag: level - countOfRight, level: level, rights: countOfRight});\n\n            },\n            finishGame() {\n                this.setState(this.state = {status: \"finish\"})\n            },\n            restartGame() {\n                this.setState(this.state = {status: \"start\"})\n            }\n        }\n        /*for (let i = 1; i <= this.state.level; i++) {\n            let answer = 'wrong';\n            let src = this.state.right;\n            if (this.state.answers.includes(i)) {\n                answer = 'truth';\n            } else {\n                while (true) {\n                    src = (Math.floor(Math.random() * this.state.level) + 1);\n                    if (!numbers.includes(src) && (src !== this.state.right)) {\n                        numbers.push(src);\n                        break;\n                    }\n                }\n            }\n            arr.push(<Card src={src + \".jpg\"} index={i} status={\"open\"} changeStatus={this.state.changeStatus} answer={answer} level={'level_' + this.state.level} changeParentFlag={this.state.changeFlag.bind(this)} key={i}/>);\n        }*/\n    }\n    render() {\n        if (this.state.status === \"start\") {\n            return <Container>\n                <Level name={\"легко\"} action={this.state.startGame.bind(this, 9)}/>\n                <Level name={\"средне\"} action={this.state.startGame.bind(this, 16)}/>\n                <Level name={\"сложно\"} action={this.state.startGame.bind(this, 25)}/>\n            </Container>\n        } else if (this.state.status === \"current\") {\n            return <Fragment>\n                <input type=\"button\" style={{position: \"absolute\"}} value=\"check\"\n                       onClick={this.state.finishGame.bind(this)}/>\n                <Timer/>\n                <Table>\n                    {this.state.cards}\n                </Table>\n            </Fragment>\n        } else {\n            return <Fragment>\n                <Result flag={this.state.flag} num={this.state.level}/>\n                <input type=\"button\" value=\"return\" onClick={this.state.restartGame.bind(this)}/>\n            </Fragment>\n        }\n    }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}