{"ast":null,"code":"var _jsxFileName = \"/home/ralina/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/project/memory-app/memory-frontend/src/App.js\";\nimport React, { Fragment, useRef } from 'react';\nimport { createSmartappDebugger, createAssistant } from \"@sberdevices/assistant-client\";\nimport './App.css';\nimport { Table } from \"./components/table/Table\";\nimport { Card } from \"./components/card/Card\";\nimport { Timer } from \"./components/timer/Timer\";\nimport { Result } from \"./components/result/Result\";\nimport { Level } from \"./components/level/Level\";\nimport { Container } from \"./components/container/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet countOfPictures = 25;\n\nconst initializeAssistant = (getState\n/*: any*/\n) => {\n  if (process.env.NODE_ENV === \"development\") {\n    var _eyJhbGciOiJSUzI1NiIs;\n\n    return createSmartappDebugger({\n      token: (_eyJhbGciOiJSUzI1NiIs = \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZTFmNTQxODM0NzEwNjkyNzAzM2QwYTQ0ODFmMTNkNTJiMTA1N2NhMWNkY2I0OTg0ZGNiMWQxZjQzMzdhMzYyNTM5YmU5MjcwMDQyNjI5OCIsImF1ZCI6IlZQUyIsImV4cCI6MTYyMTg2MDQyMCwiaWF0IjoxNjIxNzc0MDEwLCJpc3MiOiJLRVlNQVNURVIiLCJ0eXBlIjoiQmVhcmVyIiwianRpIjoiZTU0ODUxY2EtZWU0Ny00YjlkLTljNWQtOTQ3YTM1MTEwYWNjIiwic2lkIjoiYzUxYTQ2ZWItZjhjNy00OWFjLWFhYjgtMzY1YmQ4MmM3NGMxIn0.qMpJX8hvSxMQvXFLxFb-sJrUsdrPmHE6juiYO18mnQBoc_hajxFWPNyB0zI2aQV2yMrzk55NmjtZr2lFV7m75cewDXn1BzaQYPHp8pHmm6NA6bm4lADCddV9NqrGLU4MbXrkcAXz1Bd0e0Yu-z4LhwfxAobBZ8-fyYZs_4-9WFTaSOdG5yoxOz8h93OOd88nO4pKS6JKcEDsZCl89Tphaduqtp8Ugna3uc_0Akjtc2BvYqu6_WBoen3Qc1QFQG0HZa7G0iXxzxfRdZCkbOCbHpZPYwni4rCKPfAarC3QwiQMUWBD-QBoLNZIAwIULDbTulfm8T0hcJkfVgPcuDjV-_83RPMFfNugZJtppv3HCJcIpDHyN_j-J9IBn2l9ACKHBJWLEaSPO1_5rfhrwNZG-Hf_5El0rJ5jU0msJh6In_RzH5PJ8LtlIuJrLfQrayoppwM2Bh25AnnQwoqU9rLoXlAzEr3LXcp1WC6E5X5zzbZqbAFqa1dIckcT9_6s4icMJB_jRPc3leXym8D4RAAvQKIYpzYWSRUGEIG0PZ5VWwBAeOdJg7dJnQGPbQFK3K7F4Ma9T0gcSNdbR2996db5LRGTCWdBdhZs58i0KT4QOuvERXR_hX1ytgrpDfXfFKM1pyZrcrEljTZTGYg_N_AvpaaKUId8ZOwrveZQI0RY5L0\") !== null && _eyJhbGciOiJSUzI1NiIs !== void 0 ? _eyJhbGciOiJSUzI1NiIs : \"\",\n      initPhrase: 'Запусти память',\n      getState\n    });\n  }\n\n  return createAssistant({\n    getState\n  });\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n    this.assistant.on(\"data\", (event\n    /*: any*/\n    ) => {\n      console.log(`assistant.on(data)`, event);\n      const {\n        action\n      } = event;\n      this.dispatchAssistantAction(action);\n    });\n    this.assistant.on(\"start\", event => {\n      console.log(`assistant.on(start)`, event);\n    });\n    this.state = {\n      cards: [],\n      flag: 0,\n      status: 'start',\n      level: 0,\n\n      changeFlag(value) {\n        this.setState(this.state = {\n          flag: this.state.flag + value\n        });\n      },\n\n      startGame(level) {\n        function random(from, till) {\n          return Math.floor(Math.random() * (till - from)) + from;\n        }\n\n        function changeFlag(value) {\n          this.setState(this.state = {\n            flag: this.state.flag + value\n          });\n        }\n\n        let countOfAnswers = random(4, 7);\n        let answer = random(0, countOfPictures);\n        console.log(answer);\n        console.log(countOfAnswers);\n        let answersIndexes = new Set();\n        let used = new Set([answer]);\n        let cards = [];\n\n        for (let i = 0; i < countOfAnswers; i++) {\n          while (true) {\n            let ind = random(0, level);\n\n            if (!answersIndexes.has(ind)) {\n              answersIndexes.add(ind);\n              break;\n            }\n          }\n        }\n\n        this.setState(this.state = {\n          status: \"current\",\n          flag: level - countOfAnswers,\n          level: level,\n          changeFlag: changeFlag\n        });\n\n        for (let i = 0; i < level; i++) {\n          let isAnswer = 'wrong';\n          let value = 0;\n\n          if (countOfAnswers !== 0 && answersIndexes.has(i)) {\n            {\n              countOfAnswers--;\n              isAnswer = 'truth';\n              value = answer;\n            }\n          } else {\n            while (true) {\n              value = random(0, countOfPictures);\n\n              if (!used.has(value)) {\n                used.add(value);\n                break;\n              }\n            }\n          }\n\n          cards.push( /*#__PURE__*/_jsxDEV(Card, {\n            src: \"https://pictures-for-memory-game.s3.eu-north-1.amazonaws.com/\" + (value + 1) + \".jpg\",\n            index: i + 1,\n            status: \"open\",\n            answer: isAnswer,\n            level: 'level_' + level,\n            changeParentFlag: changeFlag.bind(this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 32\n          }, this));\n        }\n\n        this.setState(this.state = {\n          cards: cards\n        });\n      },\n\n      finishGame() {\n        this.setState(this.state = {\n          status: \"finish\"\n        });\n      },\n\n      restartGame() {\n        this.setState(this.state = {\n          status: \"start\"\n        });\n      }\n\n    };\n  }\n\n  getStateForAssistant() {\n    console.log('getStateForAssistant: this.state:', this.state);\n    const state = {};\n    return state;\n  }\n\n  dispatchAssistantAction(action) {\n    console.log('dispatchAssistantAction', action);\n\n    if (action) {\n      switch (action.type) {\n        case \"easy_level\":\n          this.state.startGame(9);\n\n        case \"middle_level\":\n          this.state.startGame(16);\n\n        case \"hard_level\":\n          this.state.startGame(25);\n      }\n    }\n  }\n\n  render() {\n    if (this.state.status === \"start\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Level, {\n          num: 1,\n          name: \"легко\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Level, {\n          num: 2,\n          name: \"средне\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Level, {\n          num: 3,\n          name: \"сложно\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.status === \"current\") {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          style: {\n            position: \"absolute\"\n          },\n          value: \"check\",\n          onClick: this.state.finishGame.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: this.state.cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Result, {\n          flag: this.state.flag,\n          num: this.state.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"return\",\n          onClick: this.state.restartGame.bind(this),\n          style: {\n            position: 'absolute',\n            top: 0,\n            zIndex: 1001\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ralina/Рабочий стол/project/memory-app/memory-frontend/src/App.js"],"names":["React","Fragment","useRef","createSmartappDebugger","createAssistant","Table","Card","Timer","Result","Level","Container","countOfPictures","initializeAssistant","getState","process","env","NODE_ENV","token","initPhrase","App","Component","constructor","props","assistant","getStateForAssistant","on","event","console","log","action","dispatchAssistantAction","state","cards","flag","status","level","changeFlag","value","setState","startGame","random","from","till","Math","floor","countOfAnswers","answer","answersIndexes","Set","used","i","ind","has","add","isAnswer","push","bind","finishGame","restartGame","type","render","position","top","zIndex"],"mappings":"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","sourcesContent":["import React, {Fragment, useRef} from 'react'\n\nimport {\n    createSmartappDebugger,\n    createAssistant,\n} from \"@sberdevices/assistant-client\";\n\nimport './App.css'\nimport {Table} from \"./components/table/Table\";\nimport {Card} from \"./components/card/Card\";\nimport {Timer} from \"./components/timer/Timer\";\nimport {Result} from \"./components/result/Result\";\nimport {Level} from \"./components/level/Level\";\nimport {Container} from \"./components/container/Container\";\n\nlet countOfPictures = 25;\n\nconst initializeAssistant = (getState/*: any*/) => {\n    if (process.env.NODE_ENV === \"development\") {\n        return createSmartappDebugger({\n            token: \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZTFmNTQxODM0NzEwNjkyNzAzM2QwYTQ0ODFmMTNkNTJiMTA1N2NhMWNkY2I0OTg0ZGNiMWQxZjQzMzdhMzYyNTM5YmU5MjcwMDQyNjI5OCIsImF1ZCI6IlZQUyIsImV4cCI6MTYyMTg2MDQyMCwiaWF0IjoxNjIxNzc0MDEwLCJpc3MiOiJLRVlNQVNURVIiLCJ0eXBlIjoiQmVhcmVyIiwianRpIjoiZTU0ODUxY2EtZWU0Ny00YjlkLTljNWQtOTQ3YTM1MTEwYWNjIiwic2lkIjoiYzUxYTQ2ZWItZjhjNy00OWFjLWFhYjgtMzY1YmQ4MmM3NGMxIn0.qMpJX8hvSxMQvXFLxFb-sJrUsdrPmHE6juiYO18mnQBoc_hajxFWPNyB0zI2aQV2yMrzk55NmjtZr2lFV7m75cewDXn1BzaQYPHp8pHmm6NA6bm4lADCddV9NqrGLU4MbXrkcAXz1Bd0e0Yu-z4LhwfxAobBZ8-fyYZs_4-9WFTaSOdG5yoxOz8h93OOd88nO4pKS6JKcEDsZCl89Tphaduqtp8Ugna3uc_0Akjtc2BvYqu6_WBoen3Qc1QFQG0HZa7G0iXxzxfRdZCkbOCbHpZPYwni4rCKPfAarC3QwiQMUWBD-QBoLNZIAwIULDbTulfm8T0hcJkfVgPcuDjV-_83RPMFfNugZJtppv3HCJcIpDHyN_j-J9IBn2l9ACKHBJWLEaSPO1_5rfhrwNZG-Hf_5El0rJ5jU0msJh6In_RzH5PJ8LtlIuJrLfQrayoppwM2Bh25AnnQwoqU9rLoXlAzEr3LXcp1WC6E5X5zzbZqbAFqa1dIckcT9_6s4icMJB_jRPc3leXym8D4RAAvQKIYpzYWSRUGEIG0PZ5VWwBAeOdJg7dJnQGPbQFK3K7F4Ma9T0gcSNdbR2996db5LRGTCWdBdhZs58i0KT4QOuvERXR_hX1ytgrpDfXfFKM1pyZrcrEljTZTGYg_N_AvpaaKUId8ZOwrveZQI0RY5L0\" ?? \"\",\n            initPhrase: 'Запусти память',\n            getState,\n        });\n    }\n    return createAssistant({ getState });\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.assistant = initializeAssistant(() => this.getStateForAssistant() );\n        this.assistant.on(\"data\", (event/*: any*/) => {\n            console.log(`assistant.on(data)`, event);\n            const { action } = event\n            this.dispatchAssistantAction(action);\n        });\n        this.assistant.on(\"start\", (event) => {\n            console.log(`assistant.on(start)`, event);\n        });\n        this.state = {\n            cards: [],\n            flag: 0,\n            status: 'start',\n            level: 0,\n            changeFlag(value) {\n                this.setState(this.state = {flag: this.state.flag + value})\n            },\n            startGame(level) {\n                function random(from, till) {\n                    return (Math.floor(Math.random() * (till - from)) + from);\n                }\n                function changeFlag(value) {\n                    this.setState(this.state = {flag: this.state.flag + value})\n                }\n                let countOfAnswers = random(4, 7);\n                let answer = random(0, countOfPictures);\n                console.log(answer);\n                console.log(countOfAnswers);\n                let answersIndexes = new Set();\n                let used = new Set([answer]);\n                let cards = [];\n\n                for (let i = 0; i < countOfAnswers; i++) {\n                    while(true) {\n                        let ind = random(0, level);\n                        if (!answersIndexes.has(ind)) {\n                            answersIndexes.add(ind);\n                            break;\n                        }\n                    }\n                }\n                this.setState(this.state = {status: \"current\", flag: level - countOfAnswers, level: level, changeFlag: changeFlag});\n                for (let i = 0; i < level; i++) {\n                    let isAnswer = 'wrong';\n                    let value = 0;\n                    if (countOfAnswers !== 0 && answersIndexes.has(i)) {\n                        {\n                            countOfAnswers--;\n                            isAnswer = 'truth';\n                            value = answer;\n                        }\n                    }\n                    else {\n                        while (true) {\n                            value = random(0, countOfPictures);\n                            if (!used.has(value)) {\n                                used.add(value);\n                                break;\n                            }\n                        }\n                    }\n                    cards.push(<Card src={\"https://pictures-for-memory-game.s3.eu-north-1.amazonaws.com/\" + (value + 1) + \".jpg\"} index={i + 1} status={\"open\"} answer={isAnswer} level={'level_' + level} changeParentFlag={changeFlag.bind(this)} key={i}/>)\n\n                }\n                this.setState(this.state = {cards: cards});\n            },\n            finishGame() {\n                this.setState(this.state = {status: \"finish\"})\n            },\n            restartGame() {\n                this.setState(this.state = {status: \"start\"})\n            }\n        }\n    }\n    getStateForAssistant () {\n        console.log('getStateForAssistant: this.state:', this.state)\n        const state = {};\n        return state;\n    }\n    dispatchAssistantAction (action) {\n        console.log('dispatchAssistantAction', action);\n        if (action) {\n            switch (action.type) {\n                case \"easy_level\":\n                    this.state.startGame(9);\n                case \"middle_level\":\n                    this.state.startGame(16);\n                case \"hard_level\":\n                    this.state.startGame(25);\n            }\n        }\n    }\n    render() {\n        if (this.state.status === \"start\") {\n            return <Container>\n                <Level num={1} name={\"легко\"}/>\n                <Level num={2} name={\"средне\"}/>\n                <Level num={3} name={\"сложно\"}/>\n            </Container>\n        } else if (this.state.status === \"current\") {\n            return <Fragment>\n                <input type=\"button\" style={{position: \"absolute\"}} value=\"check\"\n                       onClick={this.state.finishGame.bind(this)}/>\n                <Timer/>\n                <Table>\n                    {this.state.cards}\n                </Table>\n            </Fragment>\n        } else {\n            return <Fragment>\n                <Result flag={this.state.flag} num={this.state.level}/>\n                <input type=\"button\" value=\"return\" onClick={this.state.restartGame.bind(this)} style={{position: 'absolute', top: 0, zIndex: 1001}}/>\n            </Fragment>\n        }\n    }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}