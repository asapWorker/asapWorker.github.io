{"ast":null,"code":"var _jsxFileName = \"/home/ralina/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/project/memory-app/memory-frontend/src/App.js\";\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport { Table } from \"./components/table/Table\";\nimport { Card } from \"./components/card/Card\";\nimport { Timer } from \"./components/timer/Timer\";\nimport { Result } from \"./components/result/Result\";\nimport { Level } from \"./components/level/Level\";\nimport { Container } from \"./components/container/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n      cards: [],\n      flag: 0,\n      status: 'start',\n      level: 0,\n\n      random(from, till) {\n        return Math.floor(Math.random() * (till - from)) + from;\n      },\n\n      changeFlag(value) {\n        this.setState(this.state = {\n          flag: this.state.flag + value\n        });\n      },\n\n      startGame(level) {\n        let countOfAnswers = this.state.random(2, 8);\n        let answer = this.state.random(1, level + 1);\n        this.setState(this.state = {\n          status: \"current\",\n          flag: level - countOfAnswers,\n          level: level\n        });\n\n        for (let i = 1; i < level; i++) {\n          let isRight = 0;\n          let isAnswer = 'wrong';\n          let value = 0;\n\n          if (countOfRight !== 0) {\n            isRight = this.state.random(0, 1);\n\n            if (isRight === 1) {\n              countOfRight--;\n              isAnswer = 'truth';\n              value = answer;\n            } else {}\n          }\n        }\n      },\n\n      finishGame() {\n        this.setState(this.state = {\n          status: \"finish\"\n        });\n      },\n\n      restartGame() {\n        this.setState(this.state = {\n          status: \"start\"\n        });\n      }\n\n    };\n    /*for (let i = 1; i <= this.state.level; i++) {\n        let answer = 'wrong';\n        let src = this.state.right;\n        if (this.state.answers.includes(i)) {\n            answer = 'truth';\n        } else {\n            while (true) {\n                src = (Math.floor(Math.random() * this.state.level) + 1);\n                if (!numbers.includes(src) && (src !== this.state.right)) {\n                    numbers.push(src);\n                    break;\n                }\n            }\n        }\n        arr.push(<Card src={src + \".jpg\"} index={i} status={\"open\"} changeStatus={this.state.changeStatus} answer={answer} level={'level_' + this.state.level} changeParentFlag={this.state.changeFlag.bind(this)} key={i}/>);\n    }*/\n  }\n\n  render() {\n    if (this.state.status === \"start\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Level, {\n          name: \"легко\",\n          action: this.state.startGame.bind(this, 9)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Level, {\n          name: \"средне\",\n          action: this.state.startGame.bind(this, 16)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Level, {\n          name: \"сложно\",\n          action: this.state.startGame.bind(this, 25)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.status === \"current\") {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          style: {\n            position: \"absolute\"\n          },\n          value: \"check\",\n          onClick: this.state.finishGame.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: this.state.cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Result, {\n          flag: this.state.flag,\n          num: this.state.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"return\",\n          onClick: this.state.restartGame.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ralina/Рабочий стол/project/memory-app/memory-frontend/src/App.js"],"names":["React","Fragment","Table","Card","Timer","Result","Level","Container","App","Component","constructor","props","state","src","cards","flag","status","level","random","from","till","Math","floor","changeFlag","value","setState","startGame","countOfAnswers","answer","i","isRight","isAnswer","countOfRight","finishGame","restartGame","render","bind","position"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport './App.css'\nimport {Table} from \"./components/table/Table\";\nimport {Card} from \"./components/card/Card\";\nimport {Timer} from \"./components/timer/Timer\";\nimport {Result} from \"./components/result/Result\";\nimport {Level} from \"./components/level/Level\";\nimport {Container} from \"./components/container/Container\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n            cards: [],\n            flag: 0,\n            status: 'start',\n            level: 0,\n            random(from, till) {\n                return (Math.floor(Math.random() * (till - from)) + from);\n            },\n            changeFlag(value) {\n                this.setState(this.state = {flag: this.state.flag + value})\n            },\n            startGame(level) {\n                let countOfAnswers = this.state.random(2, 8);\n                let answer = this.state.random(1, level + 1);\n                this.setState(this.state = {status: \"current\", flag: level - countOfAnswers, level: level});\n                for (let i = 1; i < level; i++) {\n                    let isRight = 0;\n                    let isAnswer = 'wrong';\n                    let value = 0;\n                    if (countOfRight !== 0) {\n                        isRight = this.state.random(0,1);\n                        if (isRight === 1) {\n                            countOfRight--;\n                            isAnswer = 'truth';\n                            value = answer;\n                        } else {\n\n                        }\n                    }\n                }\n            },\n            finishGame() {\n                this.setState(this.state = {status: \"finish\"})\n            },\n            restartGame() {\n                this.setState(this.state = {status: \"start\"})\n            }\n        }\n        /*for (let i = 1; i <= this.state.level; i++) {\n            let answer = 'wrong';\n            let src = this.state.right;\n            if (this.state.answers.includes(i)) {\n                answer = 'truth';\n            } else {\n                while (true) {\n                    src = (Math.floor(Math.random() * this.state.level) + 1);\n                    if (!numbers.includes(src) && (src !== this.state.right)) {\n                        numbers.push(src);\n                        break;\n                    }\n                }\n            }\n            arr.push(<Card src={src + \".jpg\"} index={i} status={\"open\"} changeStatus={this.state.changeStatus} answer={answer} level={'level_' + this.state.level} changeParentFlag={this.state.changeFlag.bind(this)} key={i}/>);\n        }*/\n    }\n    render() {\n        if (this.state.status === \"start\") {\n            return <Container>\n                <Level name={\"легко\"} action={this.state.startGame.bind(this, 9)}/>\n                <Level name={\"средне\"} action={this.state.startGame.bind(this, 16)}/>\n                <Level name={\"сложно\"} action={this.state.startGame.bind(this, 25)}/>\n            </Container>\n        } else if (this.state.status === \"current\") {\n            return <Fragment>\n                <input type=\"button\" style={{position: \"absolute\"}} value=\"check\"\n                       onClick={this.state.finishGame.bind(this)}/>\n                <Timer/>\n                <Table>\n                    {this.state.cards}\n                </Table>\n            </Fragment>\n        } else {\n            return <Fragment>\n                <Result flag={this.state.flag} num={this.state.level}/>\n                <input type=\"button\" value=\"return\" onClick={this.state.restartGame.bind(this)}/>\n            </Fragment>\n        }\n    }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}