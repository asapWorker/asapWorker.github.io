declare type voiceStreamEvents = {
    status: (status: 'listen' | 'stopped') => void;
    hypotesis: (text: string, last: boolean) => void;
};
export declare const createVoiceListener: (createAudioProvider?: (cb: (data: ArrayBuffer, last: boolean) => void) => Promise<() => void>) => {
    listen: (handleVoice: (data: Uint8Array, last: boolean) => void) => Promise<void>;
    stop: () => void;
    on: <K extends "status" | "hypotesis">(event: K, cb: voiceStreamEvents[K]) => () => void;
    readonly status: "listen" | "stopped";
};
export {};
//# sourceMappingURL=createVoiceListener.d.ts.map